name: Pre-release lib-ml

on:
  push:
    # Any tag like v1.2.3-pre.1, v1.2.3-pre.2, etc.
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+-pre.*'

permissions:
  contents: write
  packages: write

jobs:
  prerelease:
    runs-on: ubuntu-22.04

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Read & bump pre-release version
        id: bump
        run: |
          CUR=$(python -c "import lib_ml.version as v; print(v.__version__)")
          echo "Current version: $CUR"

          if [[ "$CUR" =~ ^([0-9]+\.[0-9]+\.[0-9]+)-pre\.([0-9]+)$ ]]; then
            BASE="${BASH_REMATCH[1]}-pre"
            COUNT="${BASH_REMATCH[2]}"
          else
            BASE="$CUR-pre"
            COUNT=0
          fi

          NEXT="${BASE}.$((COUNT + 1))"
          echo "NEXT=$NEXT" >> $GITHUB_OUTPUT
          echo "__version__ = '$NEXT'" > lib_ml/version.py

      - name: Set up Python & build
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Build package
        run: |
          python -m pip install --upgrade pip setuptools wheel twine
          python setup.py sdist bdist_wheel

      - name: Upload to GitHub Pre-release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          prerelease: true
          body: |
            Python package **lib-ml** pre-release **${{ steps.bump.outputs.NEXT }}** published!

            Install with:

            ```bash
            pip install --extra-index-url https://pkg.github.com/${{ github.repository_owner }} lib-ml==${{ steps.bump.outputs.NEXT }}
            ```
          files: |
            dist/*.whl
            dist/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit bumped version.py & tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          NEW="${{ steps.bump.outputs.NEXT }}"
          TAG="v$NEW"
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add lib_ml/version.py
          git commit -m "chore: bump to $NEW"
          git push

          if ! git ls-remote --exit-code origin "refs/tags/$TAG" >/dev/null; then
            git tag "$TAG"
            git push origin "$TAG"
          else
            echo "Tag $TAG already exists; skipping."
          fi